/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dipit_game;

import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.Timer;

/**
 *
 * @author Arch
 */
public class GameWindowJFrame extends javax.swing.JFrame {
    int tileSize = 25;
    Timer Overloop;
    WorldBase Myworld;
    PlayerBase MyPlayer;
    JTextArea ConsoleOut = new JTextArea();
    /**
     * Creates new form GameWindowJFrame
     * @param World The World To initialize the Frame with.
     * @param ThePlayer The Player to initialize the Frame with
     */
    public GameWindowJFrame(WorldBase World, PlayerBase ThePlayer) {
        Myworld = World;
        MyPlayer = ThePlayer;
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        this.setLayout(null);
        this.setSize(9*32/2 + 400,9*32/2 + 300);
        ConsoleOut.setFocusable(false);
        this.add(ConsoleOut);
        ConsoleOut.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        
        ConsoleOut.setText(">:");
        ConsoleOut.setBounds(1, 9*32/3, 400, 300);
        
        //initComponents();
        
        for(int x = 0 ; x < World.GetWidth() ; x++){
            for(int y = 0 ; y < World.GetHeight() ; y++){
                TileBase Tile = World.GetTile(World.GetTileAtPosition(x, y));
                Tiles.add(Tile.GetLabel() );
                this.add(Tiles.get(Tiles.size()-1));
                Tiles.get(Tiles.size()-1).setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                Tiles.get(Tiles.size()-1).setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                Tiles.get(Tiles.size()-1).setText("[" + Tile.GetRenderCharacter() + "]");
                Tiles.get(Tiles.size()-1).setBounds(x*tileSize-x, y*tileSize-y, tileSize, tileSize);
                
                //Tiles.get(Tiles.size()-1).setLocation((18*Tile.GetPositionX())-18, (18*Tile.GetPositionY())-18);
                
                //this.add(Tiles.get(Tiles.size()-1));
            }
        }
        int delay = 80; //milliseconds
        ActionListener taskPerformer = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                RedrawMap();
            }
        };
        Overloop = new Timer(delay, taskPerformer);
        Overloop.start();
    }
    
    private void RedrawMap(){
        for(int x = 0 ; x < Myworld.GetWidth() ; x++){
            for(int y = 0 ; y < Myworld.GetHeight() ; y++){
                TileBase Tile = Myworld.GetTile(Myworld.GetTileAtPosition(x, y));
                if(x == MyPlayer.GetPositionX() && y == MyPlayer.GetPositionY()){
                    Myworld.GetTile(Myworld.GetTileAtPosition(x, y)).GetLabel().setText("[@]");
                } else {
                    Myworld.GetTile(Myworld.GetTileAtPosition(x, y)).GetLabel().setText("[" + Tile.GetRenderCharacter() + "]");
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        //System.out.println("pressed :" + evt.getKeyChar());
        if(evt.getKeyChar() == 'w'){
            MyPlayer.MoveUp();
        }
        if(evt.getKeyChar() == 's'){
            MyPlayer.MoveDown();
        }
        if(evt.getKeyChar() == 'a'){
            MyPlayer.MoveLeft();
        }
        if(evt.getKeyChar() == 'd'){
            MyPlayer.MoveRight();
        }
       dipit_game.DIPIT_GAME_Main.OnKeyPressed(evt);
    }//GEN-LAST:event_formKeyPressed
    
    List<javax.swing.JLabel> Tiles = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
